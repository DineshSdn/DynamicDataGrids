// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DbContextClass))]
    [Migration("20240508052719_newresponsetable")]
    partial class newresponsetable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgField", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("datagrid_id")
                        .HasColumnType("int");

                    b.Property<int>("detail_sort_order")
                        .HasColumnType("int");

                    b.Property<int>("edited_field_result_id")
                        .HasColumnType("int");

                    b.Property<string>("field_selected_value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("field_tooltip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("field_type_id")
                        .HasColumnType("int");

                    b.Property<string>("field_type_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("has_response_values")
                        .HasColumnType("bit");

                    b.Property<int?>("integer_validation_max")
                        .HasColumnType("int");

                    b.Property<int?>("integer_validation_min")
                        .HasColumnType("int");

                    b.Property<bool?>("is_integer_only")
                        .HasColumnType("bit");

                    b.Property<bool>("is_required")
                        .HasColumnType("bit");

                    b.Property<int?>("lookup_dataset")
                        .HasColumnType("int");

                    b.Property<string>("lookup_dataset_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("response_count")
                        .HasColumnType("int");

                    b.Property<bool>("show_in_detail")
                        .HasColumnType("bit");

                    b.Property<bool>("show_in_tabular")
                        .HasColumnType("bit");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("tabular_sort_order")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("dg_fields");
                });

            modelBuilder.Entity("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgFieldCPTCodesDto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("DgFieldid")
                        .HasColumnType("int");

                    b.Property<string>("cpt_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cpt_code_id")
                        .HasColumnType("int");

                    b.Property<string>("cpt_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("field_id")
                        .HasColumnType("int");

                    b.Property<int>("field_type_id")
                        .HasColumnType("int");

                    b.Property<int?>("qualifier_value")
                        .HasColumnType("int");

                    b.Property<string>("text_value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("trigger_match")
                        .HasColumnType("int");

                    b.Property<int?>("trigger_range_max")
                        .HasColumnType("int");

                    b.Property<int?>("trigger_range_min")
                        .HasColumnType("int");

                    b.Property<string>("trigger_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DgFieldid");

                    b.ToTable("DgFieldCPTCodesDto");
                });

            modelBuilder.Entity("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgFieldCodesDto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("DgFieldid")
                        .HasColumnType("int");

                    b.Property<int?>("datagrid_id")
                        .HasColumnType("int");

                    b.Property<int>("field_id")
                        .HasColumnType("int");

                    b.Property<int>("field_type_id")
                        .HasColumnType("int");

                    b.Property<int?>("qualifier_value")
                        .HasColumnType("int");

                    b.Property<string>("suspect_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("suspect_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("suspect_icd10")
                        .HasColumnType("int");

                    b.Property<string>("text_value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("trigger_match")
                        .HasColumnType("int");

                    b.Property<int?>("trigger_range_max")
                        .HasColumnType("int");

                    b.Property<int?>("trigger_range_min")
                        .HasColumnType("int");

                    b.Property<string>("trigger_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DgFieldid");

                    b.ToTable("DgFieldCodesDto");
                });

            modelBuilder.Entity("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgFieldResponseDto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("DgFieldid")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("field_id")
                        .HasColumnType("int");

                    b.Property<bool>("ideal_choice")
                        .HasColumnType("bit");

                    b.Property<int>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("response_sort_order")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("DgFieldid");

                    b.ToTable("DgFieldResponseDto");
                });

            modelBuilder.Entity("Domain.Authentication.User1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTable");
                });

            modelBuilder.Entity("Domain.Entities.DgCore", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("MasterDgTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code_key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("show_health_profile")
                        .HasColumnType("bit");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("dg_core");
                });

            modelBuilder.Entity("Domain.Entities.DgFieldCPTCode", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<int>("cpt_code_id")
                        .HasColumnType("int");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("field_id")
                        .HasColumnType("int");

                    b.Property<int>("field_type_id")
                        .HasColumnType("int");

                    b.Property<int?>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("qualifier_value")
                        .HasColumnType("int");

                    b.Property<string>("text_value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("trigger_match")
                        .HasColumnType("int");

                    b.Property<int?>("trigger_range_max")
                        .HasColumnType("int");

                    b.Property<int?>("trigger_range_min")
                        .HasColumnType("int");

                    b.Property<string>("trigger_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dg_field_cpt_code");
                });

            modelBuilder.Entity("Domain.Entities.DgFieldCalculations", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("calc_field1")
                        .HasColumnType("int");

                    b.Property<string>("calc_field1_transformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("calc_field2")
                        .HasColumnType("int");

                    b.Property<string>("calc_field2_transformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("enable_post_operator")
                        .HasColumnType("bit");

                    b.Property<int>("field_id")
                        .HasColumnType("int");

                    b.Property<string>("mid_operator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("post_operator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("post_operator_val")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("dg_field_calculations");
                });

            modelBuilder.Entity("Domain.Entities.DgFieldCodes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("field_id")
                        .HasColumnType("int");

                    b.Property<int>("field_type_id")
                        .HasColumnType("int");

                    b.Property<int?>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("qualifier_value")
                        .HasColumnType("int");

                    b.Property<int>("suspect_icd10")
                        .HasColumnType("int");

                    b.Property<string>("text_value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("trigger_match")
                        .HasColumnType("int");

                    b.Property<int?>("trigger_range_max")
                        .HasColumnType("int");

                    b.Property<int?>("trigger_range_min")
                        .HasColumnType("int");

                    b.Property<string>("trigger_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("dg_field_codes");
                });

            modelBuilder.Entity("Domain.Entities.DgFieldResponses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("field_id")
                        .HasColumnType("int");

                    b.Property<bool?>("ideal_choice")
                        .HasColumnType("bit");

                    b.Property<int?>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("response_sort_order")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("dg_field_responses");
                });

            modelBuilder.Entity("Domain.Entities.DgToRoles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("datagrid_id")
                        .HasColumnType("int");

                    b.Property<int?>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("datagrid_id");

                    b.HasIndex("role_id");

                    b.ToTable("dg_to_roles");
                });

            modelBuilder.Entity("Domain.Entities.MasterCpt", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("active_end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("active_start")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("codeset")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("codeset_version")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(max)");

                    b.Property<bool>("is_sensitive")
                        .HasColumnType("bit");

                    b.Property<int?>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("master_cpt");
                });

            modelBuilder.Entity("Domain.Entities.MasterDgLookupDatasets", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("master_dg_lookup_datasets");
                });

            modelBuilder.Entity("Domain.Entities.MasterDgTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("master_Dg_Types");
                });

            modelBuilder.Entity("Domain.Entities.MasterIcd", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("active_end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("active_start")
                        .HasColumnType("datetime2");

                    b.Property<string>("categoryCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("codeset")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("codeset_version")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(max)");

                    b.Property<int?>("hcc_code")
                        .HasColumnType("int");

                    b.Property<bool>("isBillable")
                        .HasColumnType("bit");

                    b.Property<bool>("is_billable")
                        .HasColumnType("bit");

                    b.Property<bool>("is_sensitive")
                        .HasColumnType("bit");

                    b.Property<int?>("modified_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modified_datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("master_icd");
                });

            modelBuilder.Entity("Domain.Entities.Response", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("gridid")
                        .HasColumnType("int");

                    b.Property<string>("question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("questionid")
                        .HasColumnType("int");

                    b.Property<string>("response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("responsetable");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("role_nmae")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("Domain.Entity.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CarTable");
                });

            modelBuilder.Entity("Domain.Entity.Register", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegisterTable");
                });

            modelBuilder.Entity("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgFieldCPTCodesDto", b =>
                {
                    b.HasOne("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgField", null)
                        .WithMany("field_cpt")
                        .HasForeignKey("DgFieldid");
                });

            modelBuilder.Entity("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgFieldCodesDto", b =>
                {
                    b.HasOne("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgField", null)
                        .WithMany("field_suspects")
                        .HasForeignKey("DgFieldid");
                });

            modelBuilder.Entity("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgFieldResponseDto", b =>
                {
                    b.HasOne("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgField", null)
                        .WithMany("field_response")
                        .HasForeignKey("DgFieldid");
                });

            modelBuilder.Entity("Domain.Entities.DgToRoles", b =>
                {
                    b.HasOne("Domain.Entities.DgCore", "DgCore")
                        .WithMany()
                        .HasForeignKey("datagrid_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Role", "role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DgCore");

                    b.Navigation("role");
                });

            modelBuilder.Entity("CleanArchitecture.ApplicationCore.DynamicDataGridsCQ.ViewModel.DgField", b =>
                {
                    b.Navigation("field_cpt");

                    b.Navigation("field_response");

                    b.Navigation("field_suspects");
                });
#pragma warning restore 612, 618
        }
    }
}
